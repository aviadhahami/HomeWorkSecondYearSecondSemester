/*
 * Generated by Aviad Hahami
 * 302188347
 */
public class MergeSortModified implements Sort {
	/*
	 * Divide by 3 merge sort
	 */
	
/*	func mergesort( var a as array )
    if ( n == 1 ) return a

    
    size = n/3
    l1 = a[0] .. a[size]
    l2 = a[size+1]..a[size*2]
    l3 = a[size*2 + 1]..a[length-1]

    l1 = mergesort( l1 )
    l2 = mergesort( l2 )
    l3 = mergesort( l3 )

    return merge( l1, l2, l3 )
end func

func merge( l1,l3,l3)
    var result as array

    while ( a and b and c )
         if ( a[0] > b[0] )
              add b[0] to the end of c
              remove b[0] from b
         else
              add a[0] to the end of c
              remove a[0] from a
              
              
    while ( a has elements )
         add a[0] to the end of c
         remove a[0] from a
    while ( b has elements )
         add b[0] to the end of c
         remove b[0] from b
    return c
end func*/
public int[] sort(int[] io_InputArray) {
	//TODO : check for needed shit
		return mergeSortThreeWay(io_InputArray);
}

	private int[] mergeSortThreeWay(int[] i_InputArray) {
		if (i_InputArray.length == 1) {
			return i_InputArray;
		}
		//calculate array size divided by three
		int i_CurrentSizeDividedByThree = i_InputArray.length / 3;
		
		//allocate new arrays for further usage
		int[] io_LeftArray = new int[i_CurrentSizeDividedByThree];
		int[] io_MiddleArray = new int[i_CurrentSizeDividedByThree];
		int[] io_RightArray = new int[i_CurrentSizeDividedByThree];
		
		//copy arrays to new allocations
		System.arraycopy(i_InputArray, 0, io_LeftArray, 0, i_CurrentSizeDividedByThree);
		System.arraycopy(i_InputArray, ++i_CurrentSizeDividedByThree, io_MiddleArray, 0, i_CurrentSizeDividedByThree);
		System.arraycopy(i_InputArray, 2 * i_CurrentSizeDividedByThree + 1, io_RightArray, 0, i_CurrentSizeDividedByThree);
		
		//send to sorter
		io_LeftArray = mergeSortThreeWay(io_LeftArray);
		io_MiddleArray = mergeSortThreeWay(io_MiddleArray);
		io_RightArray = mergeSortThreeWay(io_RightArray);
		
		return merge(io_LeftArray,io_MiddleArray,io_RightArray);
	}

	private int[] merge(int[] io_LeftArray, int[] io_MiddleArray, int[] io_RightArray) {
		// TODO Auto-generated method stub
		return null;
	}

	
}
